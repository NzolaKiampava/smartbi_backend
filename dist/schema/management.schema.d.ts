export declare const managementTypeDefs = "#graphql\n  # User Management Types\n  type UserList {\n    users: [User!]!\n    total: Int!\n    hasMore: Boolean!\n  }\n\n  type CompanyList {\n    companies: [Company!]!\n    total: Int!\n    hasMore: Boolean!\n  }\n\n  # Input Types for Updates\n  input UpdateUserInput {\n    firstName: String\n    lastName: String\n    role: UserRole\n    isActive: Boolean\n    emailVerified: Boolean\n  }\n\n  input UpdateCompanyInput {\n    name: String\n    domain: String\n    subscriptionTier: SubscriptionTier\n    maxUsers: Int\n    isActive: Boolean\n  }\n\n  input UpdateUserSettingsInput {\n    firstName: String\n    lastName: String\n    email: String\n    currentPassword: String\n    newPassword: String\n  }\n\n  # Pagination Input\n  input PaginationInput {\n    limit: Int = 10\n    offset: Int = 0\n    search: String\n  }\n\n  # Response Types\n  type UserResponse {\n    success: Boolean!\n    data: User\n    message: String\n    errors: [String!]\n  }\n\n  type CompanyResponse {\n    success: Boolean!\n    data: Company\n    message: String\n    errors: [String!]\n  }\n\n  type UserListResponse {\n    success: Boolean!\n    data: UserList\n    message: String\n    errors: [String!]\n  }\n\n  type CompanyListResponse {\n    success: Boolean!\n    data: CompanyList\n    message: String\n    errors: [String!]\n  }\n\n  extend type Query {\n    # Company Queries\n    companies(pagination: PaginationInput): CompanyListResponse!\n    company(id: ID!): CompanyResponse!\n    companyBySlug(slug: String!): CompanyResponse!\n    \n    # User Queries\n    users(pagination: PaginationInput): UserListResponse!\n    user(id: ID!): UserResponse!\n    usersByCompany(companyId: ID!, pagination: PaginationInput): UserListResponse!\n  }\n\n  extend type Mutation {\n    # User Management\n    updateUser(id: ID!, input: UpdateUserInput!): UserResponse!\n    deleteUser(id: ID!): UserResponse!\n    updateUserSettings(input: UpdateUserSettingsInput!): UserResponse!\n    \n    # Company Management\n    updateCompany(id: ID!, input: UpdateCompanyInput!): CompanyResponse!\n    deleteCompany(id: ID!): CompanyResponse!\n    \n    # User Role Management\n    changeUserRole(userId: ID!, role: UserRole!): UserResponse!\n    deactivateUser(userId: ID!): UserResponse!\n    activateUser(userId: ID!): UserResponse!\n  }\n";
//# sourceMappingURL=management.schema.d.ts.map