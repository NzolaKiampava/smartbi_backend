# Arquivo de configuração para testes de conexão SmartBI
# Copie este arquivo para config.env e ajuste as configurações

# ==============================================
# CONFIGURAÇÕES DO SERVIDOR
# ==============================================
BASE_URL=http://localhost:4000
GRAPHQL_ENDPOINT=/graphql

# ==============================================
# MYSQL
# ==============================================
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_DATABASE=smartbi_test
MYSQL_USERNAME=root
MYSQL_PASSWORD=password

# ==============================================
# POSTGRESQL
# ==============================================
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DATABASE=smartbi_test
POSTGRES_USERNAME=postgres
POSTGRES_PASSWORD=postgres

# ==============================================
# FIREBASE
# ==============================================
FIREBASE_PROJECT_ID=seu-projeto-firebase
FIREBASE_API_KEY=sua-api-key-firebase
# Ou para Service Account:
FIREBASE_SERVICE_ACCOUNT_PATH=./firebase-service-account.json

# ==============================================
# MONGODB
# ==============================================
MONGODB_CONNECTION_STRING=mongodb://localhost:27017/smartbi_test
# Para MongoDB Atlas:
# MONGODB_CONNECTION_STRING=mongodb+srv://user:password@cluster.mongodb.net/database

# ==============================================
# SUPABASE
# ==============================================
SUPABASE_URL=https://seu-projeto.supabase.co
SUPABASE_ANON_KEY=sua-anon-key
SUPABASE_SERVICE_ROLE_KEY=sua-service-role-key

# ==============================================
# REDIS
# ==============================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DATABASE=0

# ==============================================
# ELASTICSEARCH
# ==============================================
ELASTICSEARCH_HOST=localhost
ELASTICSEARCH_PORT=9200
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=password

# ==============================================
# CASSANDRA
# ==============================================
CASSANDRA_HOST=localhost
CASSANDRA_PORT=9042
CASSANDRA_KEYSPACE=smartbi_test
CASSANDRA_USERNAME=cassandra
CASSANDRA_PASSWORD=cassandra

# ==============================================
# DYNAMODB
# ==============================================
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=sua-access-key
AWS_SECRET_ACCESS_KEY=sua-secret-key
DYNAMODB_ENDPOINT=http://localhost:8000

# ==============================================
# API REST
# ==============================================
API_REST_BASE_URL=https://jsonplaceholder.typicode.com
API_REST_AUTH_TOKEN=seu-token-se-necessario

# ==============================================
# API GRAPHQL
# ==============================================
API_GRAPHQL_ENDPOINT=https://api.github.com/graphql
API_GRAPHQL_AUTH_TOKEN=seu-github-token

# ==============================================
# CONFIGURAÇÕES DE TESTE
# ==============================================
# Tempo limite para conexões (segundos)
CONNECTION_TIMEOUT=30

# Número de tentativas para cada teste
MAX_RETRIES=3

# Delay entre testes (segundos)
TEST_DELAY=2

# ==============================================
# QUERIES NATURAIS PARA TESTE
# ==============================================
# Você pode personalizar essas queries para seus dados

# MySQL/PostgreSQL
SQL_NATURAL_QUERY="mostrar todas as tabelas"

# Firebase
FIREBASE_NATURAL_QUERY="buscar 5 documentos da collection users"

# MongoDB
MONGODB_NATURAL_QUERY="contar documentos na collection produtos"

# API REST
API_REST_NATURAL_QUERY="listar todos os posts"

# API GraphQL
API_GRAPHQL_NATURAL_QUERY="buscar repositórios públicos"

# ==============================================
# CONFIGURAÇÕES AVANÇADAS
# ==============================================
# Habilitar logs detalhados
VERBOSE_LOGGING=true

# Salvar resultados dos testes
SAVE_TEST_RESULTS=true
TEST_RESULTS_PATH=./test-results

# Formato de saída dos resultados
OUTPUT_FORMAT=json  # json, xml, csv

# ==============================================
# INSTRÇÕES DE USO
# ==============================================
# 1. Copie este arquivo para config.env
# 2. Ajuste as configurações conforme seu ambiente
# 3. Execute os scripts de teste:
#    - PowerShell: .\test-connections.ps1 -TestAll
#    - Bash: ./test-connections.sh --all
#
# Para testar apenas um tipo específico:
#    - PowerShell: .\test-connections.ps1 -ConnectionType firebase
#    - Bash: ./test-connections.sh --type firebase